{"title":"Data Analysis","markdown":{"yaml":{"title":"Data Analysis","message":false,"warning":false},"headingText":"Library","containsRefs":false,"markdown":"\n\n\n```{r}\nlibrary(bulkreadr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(metafor)\nlibrary(psych)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(r4pde)\nlibrary(broom)\nlibrary(metafor)\nlibrary(lme4)\nlibrary(writexl)\nlibrary(gsheet)\nlibrary(readxl)\nlibrary(ggdist)\nlibrary(simr)\n```\n\n# Data importantion\n\n```{r}\nmb <- read_excel(\"data/full_data.xlsx\")\n\nsev_dif <- mb |> \n  filter(!is.na(prod), !is.na(sev)) |> \n  group_by(ensaio_1) |> \n  summarize(sev_max = max(sev, na.rm = TRUE),\n            sev_min = min(sev, na.rm = TRUE),\n            sev_difference = sev_max - sev_min)\n\nmb2 <- mb |> \n  filter(!is.na(prod), !is.na(sev)) |> \n  filter(ensaio_1 != 26) |> \n  filter(ensaio_1 != 29) |> \n  filter(ensaio_1 != 27) |> \n  filter(ensaio_1 != 24) |> \n  select(ensaio_1, ano, municipio, regiao, trat, bloco, sev, prod)\n\nmb2$ensaio_1 <- as.integer(factor(mb2$ensaio_1, levels = unique(mb2$ensaio_1)))\n\nmb2 <- mb2 |> \n  rename(cod = ensaio_1) |> \n  mutate(regiao = (as.factor(regiao)))\n\n```\n\n# Data visualization\n\n```{r}\nmb_mean <- mb2 |> \n  group_by(cod, ano, trat) |> \n  summarise(mean_sev = mean(sev),\n            mean_yld = mean(prod),\n            median_sev = median(sev),\n            median_prod = median(prod))\n\nmb_mean |> \n  group_by(ano) |> \n  summarise(median_sev = mean(mean_sev),\n            median_prod = mean(mean_yld))\n```\n\n## Data distribution\n\n```{r}\nmb_mean |> \n  summary()\n\ndist_sev <- mb_mean |> \n  ggplot(aes(mean_sev)) +\n  geom_histogram(binwidth = 3, fill = \"grey85\", color = \"black\", size = 1) +\n  theme_minimal_hgrid() +\n  labs(x = \"Severity (%)\", y = \"\") +\n  scale_y_continuous(limits = c(0, 80), breaks = c(seq(0, 80, by = 20), 80)) +\n  geom_vline(xintercept = 10.5945, size = 1.5, linetype = 2)\n\ndist_yld <- mb_mean |> \n  ggplot(aes(mean_yld)) +\n  geom_histogram(fill = \"grey85\", color = \"black\", linewidth = 1)+\n  theme_minimal_hgrid() +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n  geom_vline(xintercept = 6978.94, size = 1.5, linetype = 2)\n```\n\n## Boxplots year\n\n```{r}\nbox_sev <- mb_mean |> \n  ggplot(aes(factor(ano), mean_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"grey85\", color = \"black\") +\n  theme_minimal_hgrid() +\n  labs(x = \"Year\", y = \"\")\n\nbox_yld <- mb_mean |> \n  ggplot(aes(factor(ano), mean_yld)) +\n  geom_boxplot(outlier.shape = NA, fill = \"grey85\", color = \"black\") +\n  theme_minimal_hgrid() +\n  labs(x = \"Year\", y = \"\") \n```\n\n```{r}\n(dist_sev | box_sev)/\n(dist_yld | box_yld) +\n  plot_annotation(tag_levels = \"A\") # Etiquetar gráficos A,B,C...\n\n```\n\n## Individual regresions\n\n```{r}\nmb_mean |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) +\n  facet_wrap(~cod,\n             ncol = 6) +\n  scale_y_continuous(limits = c(0, 15000)) +\n  scale_x_continuous(limits = c(0, 100)) +\n  theme_cowplot() +\n  labs(y = \"Yield (kg/ha)\", x = \"Severity (%)\")\n\n```\n\n# Meta-analytic models\n\n## Correlation\n\n### Preparation of the data\n\n```{r}\ncorrelation_data <- mb2 %>%\n  group_by(cod) %>%\n  summarise(r_sev_yld = cor(sev, prod),\n            n = n(),\n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)),\n            V = 1/(n-3),\n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |> \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n```\n\n### Correlations analysis\n\n```{r}\nmeta_cor_sev_yld <- rma(Z_sev_yld, V, data = correlation_data)\nmeta_cor_sev_yld\n```\n\n```{r}\nZ_sev_yld <- meta_cor_sev_yld$b\n\nmetafor::predict.rma(meta_cor_sev_yld)\n```\n\n```{r}\nR_sev_yld <- fisherz2r(Z_sev_yld)\nR_sev_yld\n```\n\n```{r}\npredict(meta_cor_sev_yld, transf = transf.ztor)\n```\n\n### Graphics r correlation\n\n```{r}\nr <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's correlation coefficient (\" * italic(r) * \")\")) +\n  theme_minimal_hgrid()+\n  theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n```\n\n```{r}\nz <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Fisher's transformation of \" * italic(r) * \" (\" * italic(Z) * \")\")) +\n  theme_minimal_hgrid()+\n  theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\n## Random effects models\n\n```{r}\n# individual regressions\nfit_all <- mb2%>%\n  group_by(cod) |> \n  do(broom::tidy(lm(.$prod ~ .$sev), conf.int=TRUE))\n\nsummary(fit_all)\n```\n\n```{r}\n# data preparation\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\n\nSlopes <-  fit_all |> \n  filter(term == \".$sev\")\n```\n\n```{r}\n# Model for the intercepts\nmb_1 <- rma(yi = estimate, sei = std.error, data = Intercepts)\nsummary(mb_1)\n\n\n```\n\n```{r}\n# Model for the slopes\nmb_2 <- rma(yi = estimate, sei = std.error, data = Slopes)\nsummary(mb_2)\n```\n\n```{r}\nb0 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n  geom_vline(xintercept = 7616.6131, size = 1.5, linetype = 2, color = \"black\")+\n  theme_minimal_hgrid()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nb1 <- fit_all |> \n  filter(term == \".$sev\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n    geom_vline(xintercept = -60.2210\t, size = 1.5, linetype = 2, color = \"black\")+\n  theme_minimal_hgrid()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\n```{r}\n(r|z)/\n(b0|b1) +\n  plot_annotation(tag_levels = \"A\") # Etiquetar gráficos A,B,C...\n\n```\n\n```{r}\nr_regression_meta <- data.frame(\n  estimate = c(7616.6, -60.2),\n  low = c(7028.7 , -74.7),\n  high = c(8204.4, -45.8))\n\nmeta <- ggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+\n  scale_y_continuous(breaks = seq(0, 12000, by = 2000),\n                      limits = c(0, 12000))+\n  geom_abline(aes(slope = Slopes$estimate, intercept = Intercepts$estimate), size = 1, alpha = 0.5, color = \"gray\")+\n  geom_abline(data =r_regression_meta, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"#5d02a5\")+\n  geom_abline(data = r_regression_meta, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression_meta, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  labs(x = \"Severity (%)\", y = \"Yield (kg/ha) \",\n       title = paste(\"Meta-analytic model\"))+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18),\n          plot.title = element_text(hjust = 0.5, size = 18))\n\nmeta\n```\n\n## Coefficient damage\n\n```{r}\n-60.2210/7616.6131*100\n```\n\n# Moderators\n\n```{r}\nmb2 |> \n  summary()\n# median prod = 6851  \n\nmb2 |> \n  filter(trat == 1) |> \n  summary()\n# median sev = 20.5\n\nmoderator <- mb2 |>\n  select(cod, regiao, trat, bloco, sev, prod) |> \n  group_by(cod) |> \n  summarise(regiao = first(regiao),\n            mean_sev = mean(sev),\n            mean_yld = mean(prod), \n            sev_class = ifelse(mean_sev > 20.5, \">20.5\", \"<20.5\"),\n            prod_class = ifelse(mean_yld > 6851, \">6851\", \"<6851 \"))\n\nmoderator$prod_class <- as.factor(moderator$prod_class)\nmoderator$sev_class <- as.factor(moderator$sev_class)\n\n```\n\n```{r}\n#preparing data: INTERCEPTS\nint_class <- left_join(Intercepts, moderator, by = \"cod\")\n\n#preparing data: SLOPES\nslope_class <- left_join(Slopes, moderator, by = \"cod\")\n\n```\n\n## Yield Class\n\n```{r}\n# Intercept\nmb_mod1 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = int_class)\nsummary(mb_mod1)\n\n```\n\n```{r}\n# Slope\nmb_mod2 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = slope_class)\nsummary(mb_mod2)\n\n```\n\n## Sev Class\n\n```{r}\n# Intercept\nmb_mod3 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = int_class)\nsummary(mb_mod3)\n\n```\n\n```{r}\n# Slope\nmb_mod4 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = slope_class)\nsummary(mb_mod4)\n\n```\n\n## Region\n\n```{r}\n# Intercept\nmb_mod5 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = int_class)\nsummary(mb_mod5)\n\n```\n\n```{r}\n# Slope\nmb_mod6 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = slope_class)\nsummary(mb_mod6)\n\n```\n\n# Mixed model\n\n```{r}\nrc1 <- lmer(prod ~ sev + (sev |cod), data = mb2, \n            REML = F)\nsummary(rc1)\n```\n\n```{r}\n# Extraindo a variância dos efeitos aleatórios\nrandom_effects_variance <- VarCorr(rc1)\n\n# Acessando a matriz de variância/covariância do grupo 'cod'\nvar_random_effects <- random_effects_variance$cod\n\n# Variância residual (erro)\nsigma2 <- sigma(rc1)^2\n\n# τ² (variância dos efeitos aleatórios)\n# A variância do intercepto está na primeira linha e coluna\nvar_intercept <- var_random_effects[1, 1]\n\n# A variância do slope está na segunda linha e coluna\nvar_slope <- var_random_effects[2, 2]\n\n# Calcular I²\ntau2 <- var_intercept + var_slope  # Variância total dos efeitos aleatórios\nI2 <- (tau2 / (tau2 + sigma2)) * 100  # Cálculo de I²\nI2\n\n```\n\n## CI 95%\n\n```{r}\nconfint(rc1, method = \"profile\")  # Intervalo baseado no perfil de verossimilhança (mais robusto)\n```\n\n```{r}\nslp2 <- ranef(rc1)\n\nslp2 <- as.data.frame(slp2)\n\nslp2_wide <- slp2 %>%\n pivot_wider(names_from = term, values_from = c(condsd, condval)) %>%\n  rename(\n    Intercept_CondSD = \"condsd_(Intercept)\",\n    Intercept_CondVal = \"condval_(Intercept)\",\n    Sev_CondSD = condsd_sev,\n    Sev_CondVal = condval_sev) |> \n  mutate(intercepts = 7555.606+ Intercept_CondVal,\n         slopes = -57.530+Sev_CondVal)\n```\n\n```{r}\nr_regression_misto <- data.frame(\n  estimate = c(7555.6, -57.5),\n  low = c(6939.9795545 , -72.0413852),\n  high = c(8172.4353271, -44.6641961)\n)\n\n\nmixed <- ggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+\n   scale_y_continuous(breaks = seq(0, 12000, by = 2000),\n                      limits = c(0, 12000))+\n  geom_abline(data = slp2_wide, aes(slope = slopes, intercept = intercepts), size = 1, alpha = 0.5, color = \"gray\")+\n  geom_abline(data =r_regression_misto, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"#fdb430\")+\n  geom_abline(data = r_regression_misto, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression_misto, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  labs(x = \"Severity (%)\", y = \"Yield (kg/ha) \",\n       title = paste(\"Mixed-effects model\"))+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18),\n          plot.title = element_text(hjust = 0.5, size = 18))\n```\n\n```{r}\n(meta|mixed) +\n  plot_annotation(tag_levels = \"A\") # Tag graph A,B,C...\n\n```\n\n## Coefficient damage\n\n```{r}\n#mixed-models\n-58.690/7689.656*100\n```\n\n# EDT\n\n```{r}\ncost = seq(15, 45,length.out = 200)\nlambda = c(0.55, 0.65, 0.75)\nsoybean = seq(100, 300,length.out = 200)\na = c(0.008)\nrend = seq(3.5, 10.5, by = 0.5)\n```\n\n```{r}\neconomic = expand.grid(cost = cost,soybean = soybean, lambda = lambda, a = a, rend=rend) %>%\n  mutate(a2 = a * rend,\n         econ_tresh2 = ((cost/(soybean*a2))*lambda)) %>% \n  mutate(lambda = paste0(lambda,\"% of Control\")) \n```\n\n```{r}\nsurface = economic %>% \n  mutate(efficacy = case_when(lambda == \"0.55% of Control\" ~ \"55% of Control\",\n                              lambda == \"0.65% of Control\" ~ \"65% of Control\",\n                              lambda == \"0.75% of Control\" ~ \"75% of Control\")) |> \n  group_by(soybean, cost,efficacy) %>% \n  summarise(\n    econ_tresh2 = mean(econ_tresh2))\n\n\nsurface |> \n  summary()\n```\n\n```{r}\nmedian_value <- median(surface$econ_tresh2)\nprint(median_value)\n\n\nedt3 <- ggplot(surface, aes(x = econ_tresh2)) +\n  stat_halfeye(aes(fill = after_stat(x)), line = \"black\", alpha = 0.95) +\n  scale_fill_viridis_c(option = \"plasma\") +  # Substitua \"inferno\" pela opção que combina com a b\n  labs(x = \"Economic Damage Threshold (EDT)\", y = \"Density\", fill = \"EDT\") +\n  theme_minimal(base_size = 16)+\n  theme(axis.text.x = element_text(size = 13),   \n        axis.text.y = element_text(size = 13),\n        legend.position = \"NA\")\n\nedt4 <- surface %>% \n  ggplot(aes(cost, soybean, fill = econ_tresh2))+ \n  geom_raster(alpha = 0.9)+\n  scale_fill_viridis_b(option = \"C\", \n                       guide = guide_colorbar(barwidth = 0.3, barheight = 15),\n                       breaks = seq(0, 14, by =1))+\n  facet_grid(~efficacy)+\n  theme_minimal_grid()+\n  labs(y = \"Maize price (USD/t)\",\n       x = \"Cost (USD/ha)\",\n       fill =\"EDT (%)\" )+\n  theme(legend.position = \"right\",\n        legend.justification = 0.5) \n\nedt3/edt4+\n  plot_annotation(tag_levels = \"A\")+\n  plot_layout(guides = \"collect\")\n\n```\n","srcMarkdownNoYaml":"\n\n# Library\n\n```{r}\nlibrary(bulkreadr)\nlibrary(tidyverse)\nlibrary(readr)\nlibrary(metafor)\nlibrary(psych)\nlibrary(cowplot)\nlibrary(patchwork)\nlibrary(r4pde)\nlibrary(broom)\nlibrary(metafor)\nlibrary(lme4)\nlibrary(writexl)\nlibrary(gsheet)\nlibrary(readxl)\nlibrary(ggdist)\nlibrary(simr)\n```\n\n# Data importantion\n\n```{r}\nmb <- read_excel(\"data/full_data.xlsx\")\n\nsev_dif <- mb |> \n  filter(!is.na(prod), !is.na(sev)) |> \n  group_by(ensaio_1) |> \n  summarize(sev_max = max(sev, na.rm = TRUE),\n            sev_min = min(sev, na.rm = TRUE),\n            sev_difference = sev_max - sev_min)\n\nmb2 <- mb |> \n  filter(!is.na(prod), !is.na(sev)) |> \n  filter(ensaio_1 != 26) |> \n  filter(ensaio_1 != 29) |> \n  filter(ensaio_1 != 27) |> \n  filter(ensaio_1 != 24) |> \n  select(ensaio_1, ano, municipio, regiao, trat, bloco, sev, prod)\n\nmb2$ensaio_1 <- as.integer(factor(mb2$ensaio_1, levels = unique(mb2$ensaio_1)))\n\nmb2 <- mb2 |> \n  rename(cod = ensaio_1) |> \n  mutate(regiao = (as.factor(regiao)))\n\n```\n\n# Data visualization\n\n```{r}\nmb_mean <- mb2 |> \n  group_by(cod, ano, trat) |> \n  summarise(mean_sev = mean(sev),\n            mean_yld = mean(prod),\n            median_sev = median(sev),\n            median_prod = median(prod))\n\nmb_mean |> \n  group_by(ano) |> \n  summarise(median_sev = mean(mean_sev),\n            median_prod = mean(mean_yld))\n```\n\n## Data distribution\n\n```{r}\nmb_mean |> \n  summary()\n\ndist_sev <- mb_mean |> \n  ggplot(aes(mean_sev)) +\n  geom_histogram(binwidth = 3, fill = \"grey85\", color = \"black\", size = 1) +\n  theme_minimal_hgrid() +\n  labs(x = \"Severity (%)\", y = \"\") +\n  scale_y_continuous(limits = c(0, 80), breaks = c(seq(0, 80, by = 20), 80)) +\n  geom_vline(xintercept = 10.5945, size = 1.5, linetype = 2)\n\ndist_yld <- mb_mean |> \n  ggplot(aes(mean_yld)) +\n  geom_histogram(fill = \"grey85\", color = \"black\", linewidth = 1)+\n  theme_minimal_hgrid() +\n  labs(x = \"Yield (kg/ha)\", y = \"\") +\n  geom_vline(xintercept = 6978.94, size = 1.5, linetype = 2)\n```\n\n## Boxplots year\n\n```{r}\nbox_sev <- mb_mean |> \n  ggplot(aes(factor(ano), mean_sev)) +\n  geom_boxplot(outlier.shape = NA, fill = \"grey85\", color = \"black\") +\n  theme_minimal_hgrid() +\n  labs(x = \"Year\", y = \"\")\n\nbox_yld <- mb_mean |> \n  ggplot(aes(factor(ano), mean_yld)) +\n  geom_boxplot(outlier.shape = NA, fill = \"grey85\", color = \"black\") +\n  theme_minimal_hgrid() +\n  labs(x = \"Year\", y = \"\") \n```\n\n```{r}\n(dist_sev | box_sev)/\n(dist_yld | box_yld) +\n  plot_annotation(tag_levels = \"A\") # Etiquetar gráficos A,B,C...\n\n```\n\n## Individual regresions\n\n```{r}\nmb_mean |> \n  ggplot(aes(mean_sev, mean_yld))+\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\", fullrange = TRUE) +\n  geom_point(color = \"black\", shape = 1) +\n  facet_wrap(~cod,\n             ncol = 6) +\n  scale_y_continuous(limits = c(0, 15000)) +\n  scale_x_continuous(limits = c(0, 100)) +\n  theme_cowplot() +\n  labs(y = \"Yield (kg/ha)\", x = \"Severity (%)\")\n\n```\n\n# Meta-analytic models\n\n## Correlation\n\n### Preparation of the data\n\n```{r}\ncorrelation_data <- mb2 %>%\n  group_by(cod) %>%\n  summarise(r_sev_yld = cor(sev, prod),\n            n = n(),\n            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)),\n            V = 1/(n-3),\n            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |> \n  filter(r_sev_yld != \"NA\") |> \n  filter(n > 4)\n```\n\n### Correlations analysis\n\n```{r}\nmeta_cor_sev_yld <- rma(Z_sev_yld, V, data = correlation_data)\nmeta_cor_sev_yld\n```\n\n```{r}\nZ_sev_yld <- meta_cor_sev_yld$b\n\nmetafor::predict.rma(meta_cor_sev_yld)\n```\n\n```{r}\nR_sev_yld <- fisherz2r(Z_sev_yld)\nR_sev_yld\n```\n\n```{r}\npredict(meta_cor_sev_yld, transf = transf.ztor)\n```\n\n### Graphics r correlation\n\n```{r}\nr <- correlation_data %>% \n  ggplot(aes(r_sev_yld)) +\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Pearson's correlation coefficient (\" * italic(r) * \")\")) +\n  theme_minimal_hgrid()+\n  theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\n```\n\n```{r}\nz <- correlation_data %>% \n  ggplot(aes(Z_sev_yld))+\n  geom_histogram(bins = 10,\n                 color = \"black\",\n                 fill = \"grey85\",\n                 alpha = 0.5,\n                 size = 1) +\n  ylab(\"Frequency\") +\n  xlab(expression(\"Fisher's transformation of \" * italic(r) * \" (\" * italic(Z) * \")\")) +\n  theme_minimal_hgrid()+\n  theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\n## Random effects models\n\n```{r}\n# individual regressions\nfit_all <- mb2%>%\n  group_by(cod) |> \n  do(broom::tidy(lm(.$prod ~ .$sev), conf.int=TRUE))\n\nsummary(fit_all)\n```\n\n```{r}\n# data preparation\nIntercepts <- fit_all |> \n  filter(term == \"(Intercept)\")\n\nSlopes <-  fit_all |> \n  filter(term == \".$sev\")\n```\n\n```{r}\n# Model for the intercepts\nmb_1 <- rma(yi = estimate, sei = std.error, data = Intercepts)\nsummary(mb_1)\n\n\n```\n\n```{r}\n# Model for the slopes\nmb_2 <- rma(yi = estimate, sei = std.error, data = Slopes)\nsummary(mb_2)\n```\n\n```{r}\nb0 <- fit_all |> \n  filter(term == \"(Intercept)\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n  geom_vline(xintercept = 7616.6131, size = 1.5, linetype = 2, color = \"black\")+\n  theme_minimal_hgrid()+\n  labs(x = \"Intercept\", y = \"Frequency\") +\n  theme(\n    axis.title.x = element_text(size = 20),\n    axis.title.y = element_text(size = 20),\n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n\nb1 <- fit_all |> \n  filter(term == \".$sev\") |> \n  ggplot(aes(x = estimate))+\n  geom_histogram(bins = 15, color = \"black\", fill = \"grey85\", alpha = 0.5, size = 1)+\n    geom_vline(xintercept = -60.2210\t, size = 1.5, linetype = 2, color = \"black\")+\n  theme_minimal_hgrid()+\n  labs(x = \"Slope\", y = \"Frequency\")+\n   theme(\n    axis.title.x = element_text(size = 20), \n    axis.title.y = element_text(size = 20), \n    axis.text.x = element_text(size = 16),   \n    axis.text.y = element_text(size = 16))\n```\n\n```{r}\n(r|z)/\n(b0|b1) +\n  plot_annotation(tag_levels = \"A\") # Etiquetar gráficos A,B,C...\n\n```\n\n```{r}\nr_regression_meta <- data.frame(\n  estimate = c(7616.6, -60.2),\n  low = c(7028.7 , -74.7),\n  high = c(8204.4, -45.8))\n\nmeta <- ggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+\n  scale_y_continuous(breaks = seq(0, 12000, by = 2000),\n                      limits = c(0, 12000))+\n  geom_abline(aes(slope = Slopes$estimate, intercept = Intercepts$estimate), size = 1, alpha = 0.5, color = \"gray\")+\n  geom_abline(data =r_regression_meta, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"#5d02a5\")+\n  geom_abline(data = r_regression_meta, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression_meta, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  labs(x = \"Severity (%)\", y = \"Yield (kg/ha) \",\n       title = paste(\"Meta-analytic model\"))+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18),\n          plot.title = element_text(hjust = 0.5, size = 18))\n\nmeta\n```\n\n## Coefficient damage\n\n```{r}\n-60.2210/7616.6131*100\n```\n\n# Moderators\n\n```{r}\nmb2 |> \n  summary()\n# median prod = 6851  \n\nmb2 |> \n  filter(trat == 1) |> \n  summary()\n# median sev = 20.5\n\nmoderator <- mb2 |>\n  select(cod, regiao, trat, bloco, sev, prod) |> \n  group_by(cod) |> \n  summarise(regiao = first(regiao),\n            mean_sev = mean(sev),\n            mean_yld = mean(prod), \n            sev_class = ifelse(mean_sev > 20.5, \">20.5\", \"<20.5\"),\n            prod_class = ifelse(mean_yld > 6851, \">6851\", \"<6851 \"))\n\nmoderator$prod_class <- as.factor(moderator$prod_class)\nmoderator$sev_class <- as.factor(moderator$sev_class)\n\n```\n\n```{r}\n#preparing data: INTERCEPTS\nint_class <- left_join(Intercepts, moderator, by = \"cod\")\n\n#preparing data: SLOPES\nslope_class <- left_join(Slopes, moderator, by = \"cod\")\n\n```\n\n## Yield Class\n\n```{r}\n# Intercept\nmb_mod1 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = int_class)\nsummary(mb_mod1)\n\n```\n\n```{r}\n# Slope\nmb_mod2 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = slope_class)\nsummary(mb_mod2)\n\n```\n\n## Sev Class\n\n```{r}\n# Intercept\nmb_mod3 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = int_class)\nsummary(mb_mod3)\n\n```\n\n```{r}\n# Slope\nmb_mod4 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = slope_class)\nsummary(mb_mod4)\n\n```\n\n## Region\n\n```{r}\n# Intercept\nmb_mod5 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = int_class)\nsummary(mb_mod5)\n\n```\n\n```{r}\n# Slope\nmb_mod6 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = slope_class)\nsummary(mb_mod6)\n\n```\n\n# Mixed model\n\n```{r}\nrc1 <- lmer(prod ~ sev + (sev |cod), data = mb2, \n            REML = F)\nsummary(rc1)\n```\n\n```{r}\n# Extraindo a variância dos efeitos aleatórios\nrandom_effects_variance <- VarCorr(rc1)\n\n# Acessando a matriz de variância/covariância do grupo 'cod'\nvar_random_effects <- random_effects_variance$cod\n\n# Variância residual (erro)\nsigma2 <- sigma(rc1)^2\n\n# τ² (variância dos efeitos aleatórios)\n# A variância do intercepto está na primeira linha e coluna\nvar_intercept <- var_random_effects[1, 1]\n\n# A variância do slope está na segunda linha e coluna\nvar_slope <- var_random_effects[2, 2]\n\n# Calcular I²\ntau2 <- var_intercept + var_slope  # Variância total dos efeitos aleatórios\nI2 <- (tau2 / (tau2 + sigma2)) * 100  # Cálculo de I²\nI2\n\n```\n\n## CI 95%\n\n```{r}\nconfint(rc1, method = \"profile\")  # Intervalo baseado no perfil de verossimilhança (mais robusto)\n```\n\n```{r}\nslp2 <- ranef(rc1)\n\nslp2 <- as.data.frame(slp2)\n\nslp2_wide <- slp2 %>%\n pivot_wider(names_from = term, values_from = c(condsd, condval)) %>%\n  rename(\n    Intercept_CondSD = \"condsd_(Intercept)\",\n    Intercept_CondVal = \"condval_(Intercept)\",\n    Sev_CondSD = condsd_sev,\n    Sev_CondVal = condval_sev) |> \n  mutate(intercepts = 7555.606+ Intercept_CondVal,\n         slopes = -57.530+Sev_CondVal)\n```\n\n```{r}\nr_regression_misto <- data.frame(\n  estimate = c(7555.6, -57.5),\n  low = c(6939.9795545 , -72.0413852),\n  high = c(8172.4353271, -44.6641961)\n)\n\n\nmixed <- ggplot() +\n  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+\n   scale_y_continuous(breaks = seq(0, 12000, by = 2000),\n                      limits = c(0, 12000))+\n  geom_abline(data = slp2_wide, aes(slope = slopes, intercept = intercepts), size = 1, alpha = 0.5, color = \"gray\")+\n  geom_abline(data =r_regression_misto, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = \"#fdb430\")+\n  geom_abline(data = r_regression_misto, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci\n  geom_abline(data = r_regression_misto, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci\n  labs(x = \"Severity (%)\", y = \"Yield (kg/ha) \",\n       title = paste(\"Mixed-effects model\"))+\n  theme_classic()+\n  theme(text = element_text(size = 20),\n        axis.text.x = element_text(size = 18),   \n        axis.text.y = element_text(size = 18),\n          plot.title = element_text(hjust = 0.5, size = 18))\n```\n\n```{r}\n(meta|mixed) +\n  plot_annotation(tag_levels = \"A\") # Tag graph A,B,C...\n\n```\n\n## Coefficient damage\n\n```{r}\n#mixed-models\n-58.690/7689.656*100\n```\n\n# EDT\n\n```{r}\ncost = seq(15, 45,length.out = 200)\nlambda = c(0.55, 0.65, 0.75)\nsoybean = seq(100, 300,length.out = 200)\na = c(0.008)\nrend = seq(3.5, 10.5, by = 0.5)\n```\n\n```{r}\neconomic = expand.grid(cost = cost,soybean = soybean, lambda = lambda, a = a, rend=rend) %>%\n  mutate(a2 = a * rend,\n         econ_tresh2 = ((cost/(soybean*a2))*lambda)) %>% \n  mutate(lambda = paste0(lambda,\"% of Control\")) \n```\n\n```{r}\nsurface = economic %>% \n  mutate(efficacy = case_when(lambda == \"0.55% of Control\" ~ \"55% of Control\",\n                              lambda == \"0.65% of Control\" ~ \"65% of Control\",\n                              lambda == \"0.75% of Control\" ~ \"75% of Control\")) |> \n  group_by(soybean, cost,efficacy) %>% \n  summarise(\n    econ_tresh2 = mean(econ_tresh2))\n\n\nsurface |> \n  summary()\n```\n\n```{r}\nmedian_value <- median(surface$econ_tresh2)\nprint(median_value)\n\n\nedt3 <- ggplot(surface, aes(x = econ_tresh2)) +\n  stat_halfeye(aes(fill = after_stat(x)), line = \"black\", alpha = 0.95) +\n  scale_fill_viridis_c(option = \"plasma\") +  # Substitua \"inferno\" pela opção que combina com a b\n  labs(x = \"Economic Damage Threshold (EDT)\", y = \"Density\", fill = \"EDT\") +\n  theme_minimal(base_size = 16)+\n  theme(axis.text.x = element_text(size = 13),   \n        axis.text.y = element_text(size = 13),\n        legend.position = \"NA\")\n\nedt4 <- surface %>% \n  ggplot(aes(cost, soybean, fill = econ_tresh2))+ \n  geom_raster(alpha = 0.9)+\n  scale_fill_viridis_b(option = \"C\", \n                       guide = guide_colorbar(barwidth = 0.3, barheight = 15),\n                       breaks = seq(0, 14, by =1))+\n  facet_grid(~efficacy)+\n  theme_minimal_grid()+\n  labs(y = \"Maize price (USD/t)\",\n       x = \"Cost (USD/ha)\",\n       fill =\"EDT (%)\" )+\n  theme(legend.position = \"right\",\n        legend.justification = 0.5) \n\nedt3/edt4+\n  plot_annotation(tag_levels = \"A\")+\n  plot_layout(guides = \"collect\")\n\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"about.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.57","editor":"visual","theme":"Minimalist","title":"Data Analysis","message":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}