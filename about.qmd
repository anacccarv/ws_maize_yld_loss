---
title: "Data Analysis"
message: false
warning: false
---

# Library

```{r}
library(bulkreadr)
library(tidyverse)
library(readr)
library(metafor)
library(psych)
library(cowplot)
library(patchwork)
library(r4pde)
library(broom)
library(metafor)
library(lme4)
library(writexl)
library(gsheet)
library(readxl)
library(ggdist)
library(simr)
```

# Data importantion

```{r}
mb <- read_excel("data/full_data.xlsx")

sev_dif <- mb |> 
  filter(!is.na(prod), !is.na(sev)) |> 
  group_by(ensaio_1) |> 
  summarize(sev_max = max(sev, na.rm = TRUE),
            sev_min = min(sev, na.rm = TRUE),
            sev_difference = sev_max - sev_min)

mb2 <- mb |> 
  filter(!is.na(prod), !is.na(sev)) |> 
  filter(ensaio_1 != 26) |> 
  filter(ensaio_1 != 29) |> 
  filter(ensaio_1 != 27) |> 
  filter(ensaio_1 != 24) |> 
  select(ensaio_1, ano, municipio, regiao, trat, bloco, sev, prod)

mb2$ensaio_1 <- as.integer(factor(mb2$ensaio_1, levels = unique(mb2$ensaio_1)))

mb2 <- mb2 |> 
  rename(cod = ensaio_1) |> 
  mutate(regiao = (as.factor(regiao)))

```

# Data visualization

```{r}
mb_mean <- mb2 |> 
  group_by(cod, ano, trat) |> 
  summarise(mean_sev = mean(sev),
            mean_yld = mean(prod),
            median_sev = median(sev),
            median_prod = median(prod))

mb_mean |> 
  group_by(ano) |> 
  summarise(median_sev = mean(mean_sev),
            median_prod = mean(mean_yld))
```

## Data distribution

```{r}
mb_mean |> 
  summary()

dist_sev <- mb_mean |> 
  ggplot(aes(mean_sev)) +
  geom_histogram(binwidth = 3, fill = "grey85", color = "black", size = 1) +
  theme_minimal_hgrid() +
  labs(x = "Severity (%)", y = "") +
  scale_y_continuous(limits = c(0, 80), breaks = c(seq(0, 80, by = 20), 80)) +
  geom_vline(xintercept = 10.5945, size = 1.5, linetype = 2)

dist_yld <- mb_mean |> 
  ggplot(aes(mean_yld)) +
  geom_histogram(fill = "grey85", color = "black", linewidth = 1)+
  theme_minimal_hgrid() +
  labs(x = "Yield (kg/ha)", y = "") +
  geom_vline(xintercept = 6978.94, size = 1.5, linetype = 2)
```

## Boxplots

```{r}
box_sev <- mb_mean |> 
  ggplot(aes(factor(ano), mean_sev)) +
  geom_boxplot(outlier.shape = NA, fill = "grey85", color = "black") +
  theme_minimal_hgrid() +
  labs(x = "Second crop season", y = "")

box_yld <- mb_mean |> 
  ggplot(aes(factor(ano), mean_yld)) +
  geom_boxplot(outlier.shape = NA, fill = "grey85", color = "black") +
  theme_minimal_hgrid() +
  labs(x = "Second crop season", y = "") 
```

```{r}
(dist_sev | box_sev)/
(dist_yld | box_yld) +
  plot_annotation(tag_levels = "A") # Etiquetar gráficos A,B,C...

```

## Individual regresions

```{r}
mb_mean |> 
  ggplot(aes(mean_sev, mean_yld))+
  geom_smooth(method = "lm", se = FALSE, color = "black", fullrange = TRUE) +
  geom_point(color = "black", shape = 1) +
  facet_wrap(~cod,
             ncol = 6) +
  scale_y_continuous(limits = c(0, 15000)) +
  scale_x_continuous(limits = c(0, 100)) +
  theme_cowplot() +
  labs(y = "Yield (kg/ha)", x = "Severity (%)")

```

# Meta-analytic models

## Correlation

### Preparation of the data

```{r}
correlation_data <- mb2 %>%
  group_by(cod) %>%
  summarise(r_sev_yld = cor(sev, prod),
            n = n(),
            Z_sev_yld = 0.5*log((1+r_sev_yld)/(1-r_sev_yld)),
            V = 1/(n-3),
            vd_sev_yld = 1/(2*(1-r_sev_yld)/n-3)) |> 
  filter(r_sev_yld != "NA") |> 
  filter(n > 4)
```

### Correlations analysis

```{r}
meta_cor_sev_yld <- rma(Z_sev_yld, V, data = correlation_data)
meta_cor_sev_yld
```

```{r}
Z_sev_yld <- meta_cor_sev_yld$b

metafor::predict.rma(meta_cor_sev_yld)
```

```{r}
R_sev_yld <- fisherz2r(Z_sev_yld)
R_sev_yld
```

```{r}
predict(meta_cor_sev_yld, transf = transf.ztor)
```

### Graphics r correlation

```{r}
r <- correlation_data %>% 
  ggplot(aes(r_sev_yld)) +
  geom_histogram(bins = 10,
                 color = "black",
                 fill = "grey85",
                 alpha = 0.5,
                 size = 1) +
  ylab("Frequency") +
  xlab(expression("Pearson's correlation coefficient (" * italic(r) * ")")) +
  theme_minimal_hgrid()+
  theme(
    axis.title.x = element_text(size = 20), 
    axis.title.y = element_text(size = 20), 
    axis.text.x = element_text(size = 16),   
    axis.text.y = element_text(size = 16))

```

```{r}
z <- correlation_data %>% 
  ggplot(aes(Z_sev_yld))+
  geom_histogram(bins = 10,
                 color = "black",
                 fill = "grey85",
                 alpha = 0.5,
                 size = 1) +
  ylab("Frequency") +
  xlab(expression("Fisher's transformation of " * italic(r) * " (" * italic(Z) * ")")) +
  theme_minimal_hgrid()+
  theme(
    axis.title.x = element_text(size = 20), 
    axis.title.y = element_text(size = 20), 
    axis.text.x = element_text(size = 16),   
    axis.text.y = element_text(size = 16))
```

## Random effects models

```{r}
# individual regressions
fit_all <- mb2%>%
  group_by(cod) |> 
  do(broom::tidy(lm(.$prod ~ .$sev), conf.int=TRUE))

summary(fit_all)
```

```{r}
# data preparation
Intercepts <- fit_all |> 
  filter(term == "(Intercept)")

Slopes <-  fit_all |> 
  filter(term == ".$sev")
```

```{r}
# Model for the intercepts
mb_1 <- rma(yi = estimate, sei = std.error, data = Intercepts)
summary(mb_1)


```

```{r}
# Model for the slopes
mb_2 <- rma(yi = estimate, sei = std.error, data = Slopes)
summary(mb_2)
```

```{r}
b0 <- fit_all |> 
  filter(term == "(Intercept)") |> 
  ggplot(aes(x = estimate))+
  geom_histogram(bins = 15, color = "black", fill = "grey85", alpha = 0.5, size = 1)+
  geom_vline(xintercept = 7616.6131, size = 1.5, linetype = 2, color = "black")+
  theme_minimal_hgrid()+
  labs(x = "Intercept", y = "Frequency") +
  theme(
    axis.title.x = element_text(size = 20),
    axis.title.y = element_text(size = 20),
    axis.text.x = element_text(size = 16),   
    axis.text.y = element_text(size = 16))

b1 <- fit_all |> 
  filter(term == ".$sev") |> 
  ggplot(aes(x = estimate))+
  geom_histogram(bins = 15, color = "black", fill = "grey85", alpha = 0.5, size = 1)+
    geom_vline(xintercept = -60.2210	, size = 1.5, linetype = 2, color = "black")+
  theme_minimal_hgrid()+
  labs(x = "Slope", y = "Frequency")+
   theme(
    axis.title.x = element_text(size = 20), 
    axis.title.y = element_text(size = 20), 
    axis.text.x = element_text(size = 16),   
    axis.text.y = element_text(size = 16))
```

```{r}
(r|z)/
(b0|b1) +
  plot_annotation(tag_levels = "A") # Etiquetar gráficos A,B,C...

```

```{r}
r_regression_meta <- data.frame(
  estimate = c(7616.6, -60.2),
  low = c(7028.7 , -74.7),
  high = c(8204.4, -45.8))

meta <- ggplot() +
  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+
  scale_y_continuous(breaks = seq(0, 12000, by = 2000),
                      limits = c(0, 12000))+
  geom_abline(aes(slope = Slopes$estimate, intercept = Intercepts$estimate), size = 1, alpha = 0.5, color = "gray")+
  geom_abline(data =r_regression_meta, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "#5d02a5")+
  geom_abline(data = r_regression_meta, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
  geom_abline(data = r_regression_meta, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
  labs(x = "Severity (%)", y = "Yield (kg/ha) ",
       title = paste("Meta-analytic model"))+
  theme_classic()+
  theme(text = element_text(size = 20),
        axis.text.x = element_text(size = 18),   
        axis.text.y = element_text(size = 18),
          plot.title = element_text(hjust = 0.5, size = 18))

meta
```

## Coefficient damage

```{r}
-60.2210/7616.6131*100
```

# Moderators

```{r}
mb2 |> 
  summary()
# median prod = 6851  

mb2 |> 
  filter(trat == 1) |> 
  summary()
# median sev = 20.5

moderator <- mb2 |>
  select(cod, regiao, trat, bloco, sev, prod) |> 
  group_by(cod) |> 
  summarise(regiao = first(regiao),
            mean_sev = mean(sev),
            mean_yld = mean(prod), 
            sev_class = ifelse(mean_sev > 20.5, ">20.5", "<20.5"),
            prod_class = ifelse(mean_yld > 6851, ">6851", "<6851 "))

moderator$prod_class <- as.factor(moderator$prod_class)
moderator$sev_class <- as.factor(moderator$sev_class)

```

```{r}
#preparing data: INTERCEPTS
int_class <- left_join(Intercepts, moderator, by = "cod")

#preparing data: SLOPES
slope_class <- left_join(Slopes, moderator, by = "cod")

```

## Yield Class

```{r}
# Intercept
mb_mod1 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = int_class)
summary(mb_mod1)

```

```{r}
# Slope
mb_mod2 <- rma(yi = estimate ~ factor(prod_class), sei = std.error, data = slope_class)
summary(mb_mod2)

```

## Sev Class

```{r}
# Intercept
mb_mod3 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = int_class)
summary(mb_mod3)

```

```{r}
# Slope
mb_mod4 <- rma(yi = estimate ~ factor(sev_class), sei = std.error, data = slope_class)
summary(mb_mod4)

```

## Region

```{r}
# Intercept
mb_mod5 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = int_class)
summary(mb_mod5)

```

```{r}
# Slope
mb_mod6 <- rma(yi = estimate ~ factor(regiao), sei = std.error, data = slope_class)
summary(mb_mod6)

```

# Mixed model

```{r}
rc1 <- lmer(prod ~ sev + (sev |cod), data = mb2, 
            REML = F)
summary(rc1)
```

```{r}
# Extraindo a variância dos efeitos aleatórios
random_effects_variance <- VarCorr(rc1)

# Acessando a matriz de variância/covariância do grupo 'cod'
var_random_effects <- random_effects_variance$cod

# Variância residual (erro)
sigma2 <- sigma(rc1)^2

# τ² (variância dos efeitos aleatórios)
# A variância do intercepto está na primeira linha e coluna
var_intercept <- var_random_effects[1, 1]

# A variância do slope está na segunda linha e coluna
var_slope <- var_random_effects[2, 2]

# Calcular I²
tau2 <- var_intercept + var_slope  # Variância total dos efeitos aleatórios
I2 <- (tau2 / (tau2 + sigma2)) * 100  # Cálculo de I²
I2

```

## CI 95%

```{r}
confint(rc1, method = "profile")  # Intervalo baseado no perfil de verossimilhança (mais robusto)
```

```{r}
slp2 <- ranef(rc1)

slp2 <- as.data.frame(slp2)

slp2_wide <- slp2 %>%
 pivot_wider(names_from = term, values_from = c(condsd, condval)) %>%
  rename(
    Intercept_CondSD = "condsd_(Intercept)",
    Intercept_CondVal = "condval_(Intercept)",
    Sev_CondSD = condsd_sev,
    Sev_CondVal = condval_sev) |> 
  mutate(intercepts = 7555.606+ Intercept_CondVal,
         slopes = -57.530+Sev_CondVal)
```

```{r}
r_regression_misto <- data.frame(
  estimate = c(7555.6, -57.5),
  low = c(6939.9795545 , -72.0413852),
  high = c(8172.4353271, -44.6641961)
)


mixed <- ggplot() +
  geom_point(aes(x = 0:100, y = seq(0,12000,by = 120)), color = NA)+
   scale_y_continuous(breaks = seq(0, 12000, by = 2000),
                      limits = c(0, 12000))+
  geom_abline(data = slp2_wide, aes(slope = slopes, intercept = intercepts), size = 1, alpha = 0.5, color = "gray")+
  geom_abline(data =r_regression_misto, aes(slope = estimate[2], intercept = estimate[1]), size = 1.5, color = "#fdb430")+
  geom_abline(data = r_regression_misto, aes(intercept = high[1], slope = high[2]), size = .51, linetype = 2)+ #upper ci
  geom_abline(data = r_regression_misto, aes(intercept = low[1], slope = low[2]), size = .51, linetype = 2)+ #low ci
  labs(x = "Severity (%)", y = "Yield (kg/ha) ",
       title = paste("Mixed-effects model"))+
  theme_classic()+
  theme(text = element_text(size = 20),
        axis.text.x = element_text(size = 18),   
        axis.text.y = element_text(size = 18),
          plot.title = element_text(hjust = 0.5, size = 18))
```

```{r}
(meta|mixed) +
  plot_annotation(tag_levels = "A") # Tag graph A,B,C...

```

## Coefficient damage

```{r}
#mixed-models
-58.690/7689.656*100
```

# EDT

```{r}
cost = seq(15, 45,length.out = 200)
lambda = c(0.55, 0.65, 0.75)
soybean = seq(100, 300,length.out = 200)
a = c(0.008)
rend = seq(3.5, 10.5, by = 0.5)
```

```{r}
economic = expand.grid(cost = cost,soybean = soybean, lambda = lambda, a = a, rend=rend) %>%
  mutate(a2 = a * rend,
         econ_tresh2 = ((cost/(soybean*a2))*lambda)) %>% 
  mutate(lambda = paste0(lambda,"% of Control")) 
```

```{r}
surface = economic %>% 
  mutate(efficacy = case_when(lambda == "0.55% of Control" ~ "55% of Control",
                              lambda == "0.65% of Control" ~ "65% of Control",
                              lambda == "0.75% of Control" ~ "75% of Control")) |> 
  group_by(soybean, cost,efficacy) %>% 
  summarise(
    econ_tresh2 = mean(econ_tresh2))


surface |> 
  summary()
```

```{r}
median_value <- median(surface$econ_tresh2)
print(median_value)


edt3 <- ggplot(surface, aes(x = econ_tresh2)) +
  stat_halfeye(aes(fill = after_stat(x)), line = "black", alpha = 0.95) +
  scale_fill_viridis_c(option = "plasma") +  # Substitua "inferno" pela opção que combina com a b
  labs(x = "Economic Damage Threshold (EDT)", y = "Density", fill = "EDT") +
  theme_minimal(base_size = 16)+
  theme(axis.text.x = element_text(size = 13),   
        axis.text.y = element_text(size = 13),
        legend.position = "NA")

edt4 <- surface %>% 
  ggplot(aes(cost, soybean, fill = econ_tresh2))+ 
  geom_raster(alpha = 0.9)+
  scale_fill_viridis_b(option = "C", 
                       guide = guide_colorbar(barwidth = 0.3, barheight = 15),
                       breaks = seq(0, 14, by =1))+
  facet_grid(~efficacy)+
  theme_minimal_grid()+
  labs(y = "Maize price (USD/t)",
       x = "Cost (USD/ha)",
       fill ="EDT (%)" )+
  theme(legend.position = "right",
        legend.justification = 0.5) 

edt3/edt4+
  plot_annotation(tag_levels = "A")+
  plot_layout(guides = "collect")

```
